Microsoft Windows [Version 10.0.17763.1]
(c) 2018 Microsoft Corporation. All rights reserved.

C:\Users\ELCOT\Downloads\mongosh-2.3.0-win32-x64\mongosh-2.3.0-win32-x64\bin>mongosh
Current Mongosh Log ID: 66d9e40673c31976a92710bb
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.0
Using MongoDB:          7.0.14
Using Mongosh:          2.3.0

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-09-05T07:14:09.515-07:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------


CREATE DATABASE:

test> use students
switched to db students

INSERT ONE:

students> db.students.insertOne({id:201,name:"Ilakkiya"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9e56173c31976a92710c0')
}
students> db.students.insertOne({id:202,name:"Kayal"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9e57d73c31976a92710c1')
}
students> db.students.insertOne({id:203,name:"Swathy"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9e59573c31976a92710c2')
}
students> db.students.insertOne({id:204,name:"Rudhra"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9e5a573c31976a92710c3')
}
students> db.students.insertOne({id:205,name:"Rudhran"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9e5b973c31976a92710c4')
}

DB COLLECTION:

students> db.students.find()
[
  {
    _id: ObjectId('66d9e32dfe86713fcc2710bc'),
    id: 201,
    name: 'Ilakkiya'
  }
  {_id: ObjectId('66d9e48573c31976a92710bd'),
    id: 202,
    name: 'Kayal'
  }
  {
    _id: ObjectId('66d9e4d173c31976a92710be'),
    id: 203,
    name: 'Swathy'
  }
 {
    _id: ObjectId('66d9e5a573c31976a92710c3'),
     id:204,
     name:'Rudhra'
 }
  {
    _id: ObjectId('66d9e5b973c31976a92710c4'),
    id: 205,
    name: 'Rudhran'
  }
]

UPDATE ONE:

students> db.students.updateOne({id:205,name:"Rudhran"},{$set:{name:"Yalini"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
students> db.students.find()
[
  {
    _id: ObjectId('66d9e32dfe86713fcc2710bc'),
    id: 201,
    name: 'Ilakkiya'
  }
 {
    _id: ObjectId('66d9e48573c31976a92710bd'),
    id: 202,
    name: 'Kayal'
  }
  {
    _id: ObjectId('66d9e4d173c31976a92710be'),
    id: 203,
    name: 'Swathy'
 }
  { _id: ObjectId('66d9e5a573c31976a92710c3'),
     id:204,
     name:'Rudhra'
}
  { _id: ObjectId('66d9e5b973c31976a92710c4'),
     id:205,
     name:'Yalini'
}
]

INSERT MANY:

students> db.students.insertMany([{id:206,name:"Kavi"}])
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('66d9e7f573c31976a92710c5') }
}
students> db.students.find()
[
  {
    _id: ObjectId('66d9e32dfe86713fcc2710bc'),
    id: 201,
    name: 'Ilakkiya'
  }
  {
    _id: ObjectId('66d9e48573c31976a92710bd'),
    id: 202,
    name: 'Kayal'
  }
  {
    _id: ObjectId('66d9e4d173c31976a92710be'),
    id: 203,
    name: 'Swathy'
  }
  { _id: ObjectId('66d9e50373c31976a92710bf'),
     id:204,
     name:'Rudhra'
}
 { _id: ObjectId('66d9e5b973c31976a92710c4'),
     id: 205,
      name: 'Yalini'
  },

  {
    _id: ObjectId('66d9e7f573c31976a92710c5'),
    id: 206,
    name: 'Kavi'
  },
]

UPDATEMANY:


students> db.students.updateMany({id:206,name:"Kavi"},{$set:{name:"Anbu"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
students> db.students.find()
[
  {
    _id: ObjectId('66d9e32dfe86713fcc2710bc'),
    id: 201,
    name: 'Ilakkiya'
  },
 
  {
    _id: ObjectId('66d9e48573c31976a92710bd'),
    id: 202,
    name: 'Kayal'
  },
  {
    _id: ObjectId('66d9e4d173c31976a92710be'),
    id: 203,
    name: 'Swathy'
  },
  { _id: ObjectId('66d9e50373c31976a92710bf'),
     id: 204,
     name: 'Rudhra'
  },
  {
    _id: ObjectId('66d9e5b973c31976a92710c4'),
     id: 205,
    name: 'Yalini'
  },
  {
    _id: ObjectId('66d9e7f573c31976a92710c5'),
    id: 206,
    name: 'Anbu'
  }
]

DALETE ONE:

students> db.students.deleteOne({id:206,name:"Anbu"})
{ acknowledged: true, deletedCount: 1 }
students> db.students.find()
[
  {
    _id: ObjectId('66d9e32dfe86713fcc2710bc'),
    id: 201,
    name: 'Ilakkiya'
  },
 
  {
    _id: ObjectId('66d9e48573c31976a92710bd'),
    id: 202,
    name: 'Kayal'
  },
  {
    _id: ObjectId('66d9e4d173c31976a92710be'),
    id: 203,
    name: 'Swathy'
  },
  { _id: ObjectId('66d9e50373c31976a92710bf'),
     id: 204,
    name: 'Rudhra'
  },
 
  {
    _id: ObjectId('66d9e5b973c31976a92710c4'),
     id: 205,
   name: 'Yalini' }
]

DELETEMANY:

students> db.students.deleteMany({id:205,name:"Yalini"})
{ acknowledged: true, deletedCount: 1 }
students> db.students.find()
[
  {
    _id: ObjectId('66d9e32dfe86713fcc2710bc'),
    id: 201,
    name: 'Ilakkiya'
  },
 
  {
    _id: ObjectId('66d9e48573c31976a92710bd'),
    id: 202,
    name: 'Kayal'
  },
  {
    _id: ObjectId('66d9e4d173c31976a92710be'),
    id: 203,
    name: 'Swathy'
  },
  { _id: ObjectId('66d9e50373c31976a92710bf'),
     id: 204,
    name: 'Rudhra'
  },
]

LIMIT:

students> db.students.find().sort({name:1}).limit(2)
[
  {
    _id: ObjectId('66d9e32dfe86713fcc2710bc'),
    id: 201,
    name: 'Ilakkiya'
  },
 
  {
    _id: ObjectId('66d9e48573c31976a92710bd'),
    id: 202,
    name: 'Kayal'
  }
]

SKIP:

students> db.students.find().skip(2)
[
  {
    _id: ObjectId('66d9e4d173c31976a92710be'),
    id: 203,
    name: 'Swathy'
  },
  { _id: ObjectId('66d9e50373c31976a92710bf'),
     id: 204,
    name: 'Rudhra'
  },
]

GREATERTHEN:
students> db.students.findOne({id:{$gt:203}})
{ _id: ObjectId('66d9e50373c31976a92710bf'), id: 204, name: 'Ruidhra' }

LESSTHEN:
students> db.students.findOne({id:{$lt:203}})
{
  _id: ObjectId('66d9e32dfe86713fcc2710bc'),
  id: 201,
  name: 'Ilakkiya'
}

GREATER THEN OR EQUAL:

students> db.students.findOne({id:{$gte:203}})
{ _id: ObjectId('66d9e4d173c31976a92710be'), id: 203, name: 'Swathy'}


LESS THAN OR EQUAL:

students> db.students.findOne({id:{$gte:203}})
{ _id: ObjectId('66d9e4d173c31976a92710be'), id: 203, name: 'Swathy' }




 
